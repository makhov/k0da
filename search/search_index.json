{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"k0da Documentation","text":"<p>\ud83d\ude80 k0da (/\u02c8ko\u028ad\u0259/) is a small CLI for creating and managing local Kubernetes clusters using k0s.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Lightweight and fast - Built on k0s for minimal resource usage</li> <li>Full k0s support - Access to all k0s features and capabilities</li> <li>Container runtime flexibility - Works with Docker or Podman</li> <li>Simple CLI interface - Easy-to-use commands for cluster management</li> <li>Local development focused - Perfect for development and testing workflows</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code># Create a new cluster\nk0da create cluster my-cluster\n\n# List clusters\nk0da list\n\n# Get kubeconfig\nk0da kubeconfig my-cluster\n\n# Delete cluster\nk0da delete my-cluster\n</code></pre>"},{"location":"#why-k0da","title":"Why k0da?","text":"<p>k0da is designed for developers who need quick, reliable local Kubernetes environments powered by k0s. It focuses on simplicity and efficiency, making it easy to spin up clusters for development, testing, and experimentation.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Ready to get started? Head over to our Installation Guide to set up k0da on your system.</p>"},{"location":"#community-and-support","title":"Community and Support","text":"<ul> <li>GitHub: makhov/k0da</li> <li>Issues: Report bugs or request features on GitHub Issues</li> <li>Discussions: Join the conversation in GitHub Discussions</li> </ul>"},{"location":"#license","title":"License","text":"<p>k0da is open source software licensed under the Apache License 2.0.</p>"},{"location":"installation/","title":"Installation","text":"<p>This guide will help you install k0da on your system.</p>"},{"location":"installation/#installation-methods","title":"Installation Methods","text":""},{"location":"installation/#method-1-download-pre-built-binaries-recommended","title":"Method 1: Download Pre-built Binaries (Recommended)","text":"<p>Download the latest release from GitHub:</p> <pre><code># Download for Linux (AMD64)\ncurl -LO https://github.com/makhov/k0da/releases/latest/download/k0da-linux-amd64\n\n# Download for macOS (ARM64)\ncurl -LO https://github.com/makhov/k0da/releases/latest/download/k0da-darwin-arm64\n\n# Download for macOS (AMD64)\ncurl -LO https://github.com/makhov/k0da/releases/latest/download/k0da-darwin-amd64\n\n# Download for Windows\ncurl -LO https://github.com/makhov/k0da/releases/latest/download/k0da-windows-amd64.exe\n</code></pre> <p>Make it executable and move to your PATH:</p> <pre><code># Linux/macOS\nchmod +x k0da-*\nsudo mv k0da-* /usr/local/bin/k0da\n\n# Verify installation\nk0da version\n</code></pre>"},{"location":"installation/#method-2-build-from-source","title":"Method 2: Build from Source","text":"<p>If you prefer to build from source or want the latest development version:</p> <pre><code># Clone the repository\ngit clone https://github.com/makhov/k0da.git\ncd k0da\n\n# Build the binary\nmake build\n\n# Install to /usr/local/bin (optional)\nsudo mv k0da-* /usr/local/bin/k0da\n</code></pre>"},{"location":"installation/#method-3-using-go-install","title":"Method 3: Using Go Install","text":"<p>Install directly using Go:</p> <pre><code>go install github.com/makhov/k0da@latest\n</code></pre> <p>Note</p> <p>Make sure your <code>$GOPATH/bin</code> is in your <code>$PATH</code> to use k0da directly.</p>"},{"location":"installation/#verify-installation","title":"Verify Installation","text":"<p>After installation, verify that k0da is working correctly:</p> <pre><code># Check version\nk0da version\n\n# Check available commands\nk0da --help\n</code></pre> <p>You should see output similar to:</p> <pre><code>k0da version v1.0.0\ncommit: abc123def\nbuilt: 2024-01-15T10:30:00Z\ngo version: go1.23.0\n</code></pre>"},{"location":"installation/#container-runtime-setup","title":"Container Runtime Setup","text":""},{"location":"installation/#docker","title":"Docker","text":"<p>Install Docker following the official Docker installation guide.</p> <p>Test your Docker installation:</p> <pre><code>docker run hello-world\n</code></pre>"},{"location":"installation/#podman","title":"Podman","text":"<p>Install Podman following the official Podman installation guide.</p> <p>For macOS users with Podman, ensure you're using a rootful machine:</p> <pre><code>podman machine set --rootful\npodman machine stop\npodman machine start\n</code></pre> <p>Test your Podman installation:</p> <pre><code>podman run hello-world\n</code></pre>"},{"location":"installation/#kubectl-installation","title":"kubectl Installation","text":"<p>Install kubectl to interact with your k0da clusters:</p> <pre><code># macOS (using Homebrew)\nbrew install kubectl\n\n# Linux\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nchmod +x kubectl\nsudo mv kubectl /usr/local/bin/\n\n# Windows (using Chocolatey)\nchoco install kubernetes-cli\n</code></pre> <p>Verify kubectl installation:</p> <pre><code>kubectl version --client\n</code></pre>"},{"location":"installation/#next-steps","title":"Next Steps","text":"<p>Now that you have k0da installed, proceed to the Quick Start Guide to create your first cluster!</p>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/#common-issues","title":"Common Issues","text":""},{"location":"installation/#k0da-command-not-found","title":"\"k0da: command not found\"","text":"<p>Ensure the k0da binary is in your PATH. Check with:</p> <pre><code>echo $PATH\nwhich k0da\n</code></pre>"},{"location":"installation/#dockerpodman-permission-issues","title":"Docker/Podman Permission Issues","text":"<p>Ensure your user is in the docker group (Linux) or Docker Desktop is running (macOS/Windows):</p> <pre><code># Linux: Add user to docker group\nsudo usermod -aG docker $USER\n# Log out and log back in\n</code></pre>"},{"location":"installation/#go-build-issues","title":"Go Build Issues","text":"<p>Ensure you have Go 1.23+ installed:</p> <pre><code>go version\n</code></pre> <p>If you need to update Go, download it from golang.org.</p> <p>For more help, check the CLI Reference or create an issue on GitHub.</p>"},{"location":"quickstart/","title":"Quick Start Guide","text":"<p>Get up and running with k0da in just a few minutes! This guide will walk you through creating your first k0s cluster.</p>"},{"location":"quickstart/#before-you-begin","title":"Before You Begin","text":"<p>Make sure you have completed the installation and have the following ready:</p> <ul> <li>\u2705 k0da installed and available in your PATH</li> <li>\u2705 Docker or Podman running</li> <li>\u2705 kubectl installed</li> </ul>"},{"location":"quickstart/#your-first-cluster","title":"Your First Cluster","text":""},{"location":"quickstart/#step-1-create-a-cluster","title":"Step 1: Create a Cluster","text":"<p>Create your first k0da cluster:</p> <pre><code>k0da create cluster\n</code></pre> <p>Or with a specific name:</p> <pre><code>k0da create cluster my-first-cluster\n</code></pre>"},{"location":"quickstart/#step-2-verify-your-cluster","title":"Step 2: Verify Your Cluster","text":"<p>Check that your cluster was created successfully:</p> <pre><code>k0da list\n</code></pre> <p>You should see output like: <pre><code>NAME              STATUS    NODES    VERSION\nmy-first-cluster  Running   1        v1.29.0+k0s.0\n</code></pre></p>"},{"location":"quickstart/#step-3-get-kubeconfig","title":"Step 3: Get Kubeconfig","text":"<p>k0da configures kubectl to connect to your cluster automatically. To view the kubeconfig for the cluster run:</p> <pre><code># Get kubeconfig and save to default location\nk0da kubeconfig my-first-cluster\n</code></pre>"},{"location":"quickstart/#step-4-interact-with-your-cluster","title":"Step 4: Interact with Your Cluster","text":"<p>Now you can use kubectl to interact with your cluster:</p> <pre><code># Check cluster info\nkubectl cluster-info\n\n# Get nodes\nkubectl get nodes\n\n# Check system pods\nkubectl get pods -A\n</code></pre> <p>Example output: <pre><code>$ kubectl get nodes\nNAME                  STATUS   ROLES           AGE   VERSION\nmy-first-cluster      Ready    control-plane   2m    v1.29.0+k0s.0\n\n$ kubectl get pods -A\nNAMESPACE            NAME                                         READY   STATUS    RESTARTS   AGE\nkube-system          coredns-6f6b679f8f-abc123                   1/1     Running   0          2m\nkube-system          konnectivity-agent-xyz789                   1/1     Running   0          2m\nkube-system          kube-proxy-def456                          1/1     Running   0          2m\n</code></pre></p>"},{"location":"quickstart/#deploy-your-first-application","title":"Deploy Your First Application","text":"<p>Let's deploy a simple application to test everything is working:</p> <pre><code># Create a deployment\nkubectl create deployment hello-k0da --image=nginx:alpine\n\n# Expose it as a service\nkubectl expose deployment hello-k0da --port=80 --type=NodePort\n\n# Check the deployment\nkubectl get pods,svc\n</code></pre> <p>Get the service URL:</p> <pre><code># Get the node port\nkubectl get svc hello-k0da\n\n# Access the service (replace NODE_PORT with actual port)\ncurl localhost:NODE_PORT\n</code></pre>"},{"location":"quickstart/#managing-your-cluster","title":"Managing Your Cluster","text":""},{"location":"quickstart/#switch-between-clusters","title":"Switch Between Clusters","text":"<p>If you create multiple clusters, switch between them using:</p> <pre><code># Create another cluster\nk0da create my-second-cluster\n\n# List all clusters\nk0da list\n\n# Switch context\nk0da context my-second-cluster\n</code></pre>"},{"location":"quickstart/#load-container-images","title":"Load Container Images","text":"<p>Load local images into your cluster:</p> <pre><code># Build a local image\ndocker build -t my-app:latest .\n\n# Load into cluster\nk0da load image my-app:latest --name my-first-cluster\n</code></pre>"},{"location":"quickstart/#clean-up","title":"Clean Up","text":"<p>When you're done, clean up your clusters:</p> <pre><code># Delete a specific cluster\nk0da delete my-first-cluster\n\n# Force delete without confirmation\nk0da delete my-second-cluster --force\n</code></pre>"},{"location":"quickstart/#whats-next","title":"What's Next?","text":"<p>Great! You've successfully created and managed your first k0da cluster. Here are some next steps:</p>"},{"location":"quickstart/#learn-more","title":"Learn More","text":"<ul> <li>User Guide - Detailed cluster creation options</li> <li>CLI Reference - Complete command reference</li> <li>Configuration - Customize your clusters</li> <li>Examples - More real-world examples</li> </ul>"},{"location":"quickstart/#advanced-topics","title":"Advanced Topics","text":"<ul> <li>Configuration - Advanced configuration options</li> <li>CLI Reference - Complete command reference</li> </ul>"},{"location":"quickstart/#common-patterns","title":"Common Patterns","text":""},{"location":"quickstart/#development-workflow","title":"Development Workflow","text":"<pre><code># Start your development session\nk0da create cluster dev-cluster\n\n# Load your application image\ndocker build -t my-app:dev .\nk0da load image my-app:dev --cluster dev-cluster\n\n# Deploy and test\nkubectl apply -f manifests/\n\n# When done, clean up\nk0da delete dev-cluster\n</code></pre>"},{"location":"quickstart/#testing-with-multiple-versions","title":"Testing with Multiple Versions","text":"<pre><code># Test with different k0s versions\nk0da create cluster test-v1-28 --k0s-version v1.28.0+k0s.0\nk0da create cluster test-v1-29 --k0s-version v1.29.0+k0s.0\n\n# Run your tests against each cluster\nk0da context test-v1-28\nkubectl apply -f test-manifests/\n# ... run tests ...\n\nk0da context test-v1-29  \nkubectl apply -f test-manifests/\n# ... run tests ...\n</code></pre> <p>Pro Tip</p> <p>Use k0da in your development workflow to quickly spin up and tear down clusters for testing different scenarios, versions, or configurations!</p>"},{"location":"cli/k0da/","title":"CLI Reference","text":""},{"location":"cli/k0da/#k0da","title":"k0da","text":"<p>k0da - A CLI utility for managing k0s clusters</p>"},{"location":"cli/k0da/#synopsis","title":"Synopsis","text":"<p>k0da is a CLI utility similar to kind but opinionated and based on k0s. It provides an easy way to create and manage lightweight Kubernetes clusters using k0s as the distribution.</p>"},{"location":"cli/k0da/#options","title":"Options","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n  -h, --help            help for k0da\n</code></pre>"},{"location":"cli/k0da/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da completion  - Generate the autocompletion script for the specified shell</li> <li>k0da context    - Switch to a different k0da cluster context</li> <li>k0da create  - Create a new k0s cluster</li> <li>k0da delete  - Delete a k0s cluster</li> <li>k0da docs  - Generate k0da command documentation</li> <li>k0da kubeconfig  - Print kubeconfig for a specific cluster</li> <li>k0da list  - List all k0da clusters</li> <li>k0da load  - Load images into the k0s cluster</li> <li>k0da update  - Update an existing k0s cluster</li> <li>k0da version    - Print version information</li> </ul>"},{"location":"cli/k0da/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_completion/","title":"K0da completion","text":""},{"location":"cli/k0da_completion/#k0da-completion","title":"k0da completion","text":"<p>Generate the autocompletion script for the specified shell</p>"},{"location":"cli/k0da_completion/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for k0da for the specified shell. See each sub-command's help for details on how to use the generated script.</p>"},{"location":"cli/k0da_completion/#options","title":"Options","text":"<pre><code>  -h, --help   help for completion\n</code></pre>"},{"location":"cli/k0da_completion/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_completion/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> <li>k0da completion bash    - Generate the autocompletion script for bash</li> <li>k0da completion fish    - Generate the autocompletion script for fish</li> <li>k0da completion powershell    - Generate the autocompletion script for powershell</li> <li>k0da completion zsh  - Generate the autocompletion script for zsh</li> </ul>"},{"location":"cli/k0da_completion/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_completion_bash/","title":"K0da completion bash","text":""},{"location":"cli/k0da_completion_bash/#k0da-completion-bash","title":"k0da completion bash","text":"<p>Generate the autocompletion script for bash</p>"},{"location":"cli/k0da_completion_bash/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for the bash shell.</p> <p>This script depends on the 'bash-completion' package. If it is not installed already, you can install it via your OS's package manager.</p> <p>To load completions in your current shell session:</p> <pre><code>source &lt;(k0da completion bash)\n</code></pre> <p>To load completions for every new session, execute once:</p>"},{"location":"cli/k0da_completion_bash/#linux","title":"Linux:","text":"<pre><code>k0da completion bash &gt; /etc/bash_completion.d/k0da\n</code></pre>"},{"location":"cli/k0da_completion_bash/#macos","title":"macOS:","text":"<pre><code>k0da completion bash &gt; $(brew --prefix)/etc/bash_completion.d/k0da\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <pre><code>k0da completion bash\n</code></pre>"},{"location":"cli/k0da_completion_bash/#options","title":"Options","text":"<pre><code>  -h, --help              help for bash\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"cli/k0da_completion_bash/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_completion_bash/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da completion  - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"cli/k0da_completion_bash/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_completion_fish/","title":"K0da completion fish","text":""},{"location":"cli/k0da_completion_fish/#k0da-completion-fish","title":"k0da completion fish","text":"<p>Generate the autocompletion script for fish</p>"},{"location":"cli/k0da_completion_fish/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for the fish shell.</p> <p>To load completions in your current shell session:</p> <pre><code>k0da completion fish | source\n</code></pre> <p>To load completions for every new session, execute once:</p> <pre><code>k0da completion fish &gt; ~/.config/fish/completions/k0da.fish\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <pre><code>k0da completion fish [flags]\n</code></pre>"},{"location":"cli/k0da_completion_fish/#options","title":"Options","text":"<pre><code>  -h, --help              help for fish\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"cli/k0da_completion_fish/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_completion_fish/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da completion  - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"cli/k0da_completion_fish/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_completion_powershell/","title":"K0da completion powershell","text":""},{"location":"cli/k0da_completion_powershell/#k0da-completion-powershell","title":"k0da completion powershell","text":"<p>Generate the autocompletion script for powershell</p>"},{"location":"cli/k0da_completion_powershell/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for powershell.</p> <p>To load completions in your current shell session:</p> <pre><code>k0da completion powershell | Out-String | Invoke-Expression\n</code></pre> <p>To load completions for every new session, add the output of the above command to your powershell profile.</p> <pre><code>k0da completion powershell [flags]\n</code></pre>"},{"location":"cli/k0da_completion_powershell/#options","title":"Options","text":"<pre><code>  -h, --help              help for powershell\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"cli/k0da_completion_powershell/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_completion_powershell/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da completion  - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"cli/k0da_completion_powershell/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_completion_zsh/","title":"K0da completion zsh","text":""},{"location":"cli/k0da_completion_zsh/#k0da-completion-zsh","title":"k0da completion zsh","text":"<p>Generate the autocompletion script for zsh</p>"},{"location":"cli/k0da_completion_zsh/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for the zsh shell.</p> <p>If shell completion is not already enabled in your environment you will need to enable it.  You can execute the following once:</p> <pre><code>echo \"autoload -U compinit; compinit\" &gt;&gt; ~/.zshrc\n</code></pre> <p>To load completions in your current shell session:</p> <pre><code>source &lt;(k0da completion zsh)\n</code></pre> <p>To load completions for every new session, execute once:</p>"},{"location":"cli/k0da_completion_zsh/#linux","title":"Linux:","text":"<pre><code>k0da completion zsh &gt; \"${fpath[1]}/_k0da\"\n</code></pre>"},{"location":"cli/k0da_completion_zsh/#macos","title":"macOS:","text":"<pre><code>k0da completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_k0da\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <pre><code>k0da completion zsh [flags]\n</code></pre>"},{"location":"cli/k0da_completion_zsh/#options","title":"Options","text":"<pre><code>  -h, --help              help for zsh\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"cli/k0da_completion_zsh/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_completion_zsh/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da completion  - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"cli/k0da_completion_zsh/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_context/","title":"K0da context","text":""},{"location":"cli/k0da_context/#k0da-context","title":"k0da context","text":"<p>Switch to a different k0da cluster context</p>"},{"location":"cli/k0da_context/#synopsis","title":"Synopsis","text":"<p>Switch to a different k0da cluster context in the unified kubeconfig. This command allows you to switch between different k0da clusters without specifying the kubeconfig file each time.</p> <pre><code>k0da context [context-name] [flags]\n</code></pre>"},{"location":"cli/k0da_context/#options","title":"Options","text":"<pre><code>  -h, --help          help for context\n  -n, --name string   name of the context to switch to\n</code></pre>"},{"location":"cli/k0da_context/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_context/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> </ul>"},{"location":"cli/k0da_context/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_create/","title":"K0da create","text":""},{"location":"cli/k0da_create/#k0da-create","title":"k0da create","text":"<p>Create a new k0s cluster</p>"},{"location":"cli/k0da_create/#synopsis","title":"Synopsis","text":"<p>Create a new k0s cluster with the specified name. This command will set up a lightweight Kubernetes cluster using k0s distribution. The cluster name can be provided as an argument or via the --name flag.</p> <pre><code>k0da create [cluster-name] [flags]\n</code></pre>"},{"location":"cli/k0da_create/#options","title":"Options","text":"<pre><code>  -c, --config string    cluster config file\n  -h, --help             help for create\n  -i, --image string     k0s image to use (default \"quay.io/k0sproject/k0s:v1.33.4-k0s.0\")\n  -n, --name string      name of the cluster to create (default \"k0da-cluster\")\n  -t, --timeout string   timeout for cluster creation (default \"60s\")\n  -w, --wait             wait for cluster to be ready (default true)\n</code></pre>"},{"location":"cli/k0da_create/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> </ul>"},{"location":"cli/k0da_create/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_delete/","title":"K0da delete","text":""},{"location":"cli/k0da_delete/#k0da-delete","title":"k0da delete","text":"<p>Delete a k0s cluster</p>"},{"location":"cli/k0da_delete/#synopsis","title":"Synopsis","text":"<p>Delete a k0s cluster with the specified name. This command will stop and remove the container associated with the cluster. The cluster name can be provided as an argument or via the --name flag.</p> <pre><code>k0da delete [cluster-name] [flags]\n</code></pre>"},{"location":"cli/k0da_delete/#options","title":"Options","text":"<pre><code>  -f, --force         force delete without confirmation\n  -h, --help          help for delete\n  -n, --name string   name of the cluster to delete (default \"k0da-cluster\")\n</code></pre>"},{"location":"cli/k0da_delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_delete/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> </ul>"},{"location":"cli/k0da_delete/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_docs/","title":"K0da docs","text":""},{"location":"cli/k0da_docs/#k0da-docs","title":"k0da docs","text":"<p>Generate k0da command documentation</p> <pre><code>k0da docs {markdown|man} {&lt;dir&gt;} [flags]\n</code></pre>"},{"location":"cli/k0da_docs/#options","title":"Options","text":"<pre><code>  -h, --help   help for docs\n</code></pre>"},{"location":"cli/k0da_docs/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_docs/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> </ul>"},{"location":"cli/k0da_docs/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_kubeconfig/","title":"K0da kubeconfig","text":""},{"location":"cli/k0da_kubeconfig/#k0da-kubeconfig","title":"k0da kubeconfig","text":"<p>Print kubeconfig for a specific cluster</p>"},{"location":"cli/k0da_kubeconfig/#synopsis","title":"Synopsis","text":"<p>Print the kubeconfig for a specific k0da cluster. This command extracts the kubeconfig for the specified cluster from the unified kubeconfig and prints it to stdout, making it easy to use with kubectl or other tools.</p> <pre><code>k0da kubeconfig [flags]\n</code></pre>"},{"location":"cli/k0da_kubeconfig/#options","title":"Options","text":"<pre><code>  -h, --help          help for kubeconfig\n  -n, --name string   name of the cluster (required) (default \"k0da-cluster\")\n</code></pre>"},{"location":"cli/k0da_kubeconfig/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_kubeconfig/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> </ul>"},{"location":"cli/k0da_kubeconfig/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_list/","title":"K0da list","text":""},{"location":"cli/k0da_list/#k0da-list","title":"k0da list","text":"<p>List all k0da clusters</p>"},{"location":"cli/k0da_list/#synopsis","title":"Synopsis","text":"<p>List all k0da clusters that are currently running or stopped. This command shows clusters managed by k0da using container labels.</p> <pre><code>k0da list [flags]\n</code></pre>"},{"location":"cli/k0da_list/#options","title":"Options","text":"<pre><code>  -a, --all       show all clusters including stopped ones\n  -h, --help      help for list\n  -v, --verbose   show detailed information\n</code></pre>"},{"location":"cli/k0da_list/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_list/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> </ul>"},{"location":"cli/k0da_list/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_load/","title":"K0da load","text":""},{"location":"cli/k0da_load/#k0da-load","title":"k0da load","text":"<p>Load images into the k0s cluster</p>"},{"location":"cli/k0da_load/#options","title":"Options","text":"<pre><code>  -h, --help          help for load\n  -n, --name string   name of the cluster (default \"k0da-cluster\")\n</code></pre>"},{"location":"cli/k0da_load/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_load/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> <li>k0da load archive  - Load a tar archive or OCI layout dir into cluster's containerd</li> <li>k0da load image  - Pull and load a container image into cluster's containerd</li> </ul>"},{"location":"cli/k0da_load/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_load_archive/","title":"K0da load archive","text":""},{"location":"cli/k0da_load_archive/#k0da-load-archive","title":"k0da load archive","text":"<p>Load a tar archive or OCI layout dir into cluster's containerd</p> <pre><code>k0da load archive [tar-archive-or-dir] [flags]\n</code></pre>"},{"location":"cli/k0da_load_archive/#options","title":"Options","text":"<pre><code>  -h, --help   help for archive\n</code></pre>"},{"location":"cli/k0da_load_archive/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n  -n, --name string     name of the cluster (default \"k0da-cluster\")\n</code></pre>"},{"location":"cli/k0da_load_archive/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da load  - Load images into the k0s cluster</li> </ul>"},{"location":"cli/k0da_load_archive/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_load_image/","title":"K0da load image","text":""},{"location":"cli/k0da_load_image/#k0da-load-image","title":"k0da load image","text":"<p>Pull and load a container image into cluster's containerd</p> <pre><code>k0da load image [image-ref] [flags]\n</code></pre>"},{"location":"cli/k0da_load_image/#options","title":"Options","text":"<pre><code>  -h, --help   help for image\n</code></pre>"},{"location":"cli/k0da_load_image/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n  -n, --name string     name of the cluster (default \"k0da-cluster\")\n</code></pre>"},{"location":"cli/k0da_load_image/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da load  - Load images into the k0s cluster</li> </ul>"},{"location":"cli/k0da_load_image/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_update/","title":"K0da update","text":""},{"location":"cli/k0da_update/#k0da-update","title":"k0da update","text":"<p>Update an existing k0s cluster</p>"},{"location":"cli/k0da_update/#synopsis","title":"Synopsis","text":"<p>Update an existing k0s cluster. This command (re)writes the effective k0s config from the provided cluster config, updates staged manifests. k0s will auto-apply manifest changes without restart.</p> <pre><code>k0da update [cluster-name] [flags]\n</code></pre>"},{"location":"cli/k0da_update/#options","title":"Options","text":"<pre><code>  -c, --config string    cluster config file\n  -h, --help             help for update\n  -i, --image string     k0s image to use (overrides config) (default \"quay.io/k0sproject/k0s:v1.33.4-k0s.0\")\n  -n, --name string      name of the cluster to update (default \"k0da-cluster\")\n  -t, --timeout string   timeout for readiness wait (default \"60s\")\n</code></pre>"},{"location":"cli/k0da_update/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> </ul>"},{"location":"cli/k0da_update/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"cli/k0da_version/","title":"K0da version","text":""},{"location":"cli/k0da_version/#k0da-version","title":"k0da version","text":"<p>Print version information</p> <pre><code>k0da version [flags]\n</code></pre>"},{"location":"cli/k0da_version/#options","title":"Options","text":"<pre><code>      --check-latest   check for the latest stable k0s version\n  -h, --help           help for version\n</code></pre>"},{"location":"cli/k0da_version/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   config file (default is $HOME/.k0da.yaml)\n</code></pre>"},{"location":"cli/k0da_version/#see-also","title":"SEE ALSO","text":"<ul> <li>k0da    - k0da - A CLI utility for managing k0s clusters</li> </ul>"},{"location":"cli/k0da_version/#auto-generated-by-spf13cobra-on-26-sep-2025","title":"Auto generated by spf13/cobra on 26-Sep-2025","text":""},{"location":"docs/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"docs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"docs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"examples/basic/","title":"Basic Usage Examples","text":"<p>Simple, practical examples of k0da usage.</p>"},{"location":"examples/basic/#basic-cluster-creation","title":"Basic Cluster Creation","text":""},{"location":"examples/basic/#default-cluster","title":"Default Cluster","text":"<pre><code># Create a cluster with default settings (auto-generated name)\nk0da create\n</code></pre>"},{"location":"examples/basic/#named-cluster","title":"Named Cluster","text":"<pre><code># Create a cluster with a specific name\nk0da create my-project\n# or using flag\nk0da create --name my-project\n</code></pre>"},{"location":"examples/basic/#multiple-clusters","title":"Multiple Clusters","text":"<pre><code># Create clusters for different purposes\nk0da create dev\nk0da create test\nk0da create staging\n</code></pre>"},{"location":"examples/basic/#configuration-features","title":"Configuration Features","text":""},{"location":"examples/basic/#basic-config-file","title":"Basic Config File","text":"<pre><code># basic-cluster.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: my-cluster\n</code></pre> <pre><code>k0da create --config basic-cluster.yaml\n</code></pre>"},{"location":"examples/basic/#multi-node-cluster","title":"Multi-node Cluster","text":"<pre><code># multi-node.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: multi-cluster\n  nodes:\n    - role: controller\n    - role: worker\n    - role: worker\n</code></pre> <pre><code>k0da create multi --config multi-node.yaml\n</code></pre>"},{"location":"examples/basic/#custom-networking","title":"Custom Networking","text":"<pre><code># custom-network.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      spec:\n        network:\n          podCIDR: \"192.168.0.0/16\"\n          serviceCIDR: \"172.20.0.0/12\"\n</code></pre>"},{"location":"examples/basic/#with-manifests","title":"With Manifests","text":"<pre><code># with-manifests.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: manifest-cluster\n    manifests:\n      - ./app/namespace.yaml\n      - ./app/deployment.yaml\n      - https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml\n</code></pre> <pre><code>k0da create manifest-test --config with-manifests.yaml\n</code></pre> <p>Manifests provide a simple way to install workloads directly into your cluster during creation. Both local files and remote URLs are supported, making it easy to bootstrap your cluster with essential components.</p>"},{"location":"examples/basic/#working-with-clusters","title":"Working with Clusters","text":""},{"location":"examples/basic/#list-and-switch","title":"List and Switch","text":"<pre><code># See all clusters\nk0da list\n\n# See all clusters including stopped ones\nk0da list --all\n\n# Switch between clusters\nk0da context dev\nkubectl get nodes\n\nk0da context test\nkubectl get nodes\n</code></pre>"},{"location":"examples/basic/#load-images","title":"Load Images","text":"<pre><code># Build and load your app\ndocker build -t my-app:latest .\nk0da load image my-app:latest --name dev\n\n# Load from tar archive\nk0da load archive my-images.tar --name dev\n</code></pre>"},{"location":"examples/basic/#cleanup","title":"Cleanup","text":"<pre><code># Delete specific cluster\nk0da delete dev\n\n# Force delete without confirmation\nk0da delete test --force\n</code></pre>"},{"location":"examples/basic/#complete-workflow-example","title":"Complete Workflow Example","text":"<pre><code># 1. Create cluster\nk0da create my-app\n\n# 2. Get kubeconfig (it's automatically available)\nk0da kubeconfig --name my-app\n\n# 3. Build and load image\ndocker build -t my-app:dev .\nk0da load image my-app:dev --name my-app\n\n# 4. Deploy\nkubectl create deployment app --image=my-app:dev\nkubectl expose deployment app --port=80 --type=NodePort\n\n# 5. Test\nkubectl get pods\nkubectl get svc\n\n# 6. When done\nk0da delete my-app\n</code></pre> <p>That's it! Simple, straightforward usage without complexity.</p>"},{"location":"examples/basic/#installing-helm-charts","title":"Installing Helm Charts","text":"<p>You can also install Helm charts directly through k0s configuration:</p> <pre><code># helm-cluster.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: helm-cluster\n      spec:\n        extensions:\n          helm:\n            repositories:\n            - name: ingress-nginx\n              url: https://kubernetes.github.io/ingress-nginx\n            - name: prometheus\n              url: https://prometheus-community.github.io/helm-charts\n            charts:\n            - name: ingress-nginx\n              chartname: ingress-nginx/ingress-nginx\n              version: \"4.8.0\"\n              namespace: ingress-nginx\n            - name: prometheus\n              chartname: prometheus/kube-prometheus-stack\n              version: \"55.0.0\"\n              namespace: monitoring\n</code></pre> <pre><code>k0da create helm-example --config helm-cluster.yaml\n</code></pre> <p>This automatically installs the specified Helm charts when the cluster starts up. For more details about Helm chart configuration options, see the k0s Helm Charts documentation.</p>"},{"location":"user-guide/configuration/","title":"Configuration","text":"<p>This guide covers all configuration options available in k0da for creating and managing clusters.</p>"},{"location":"user-guide/configuration/#configuration-file-structure","title":"Configuration File Structure","text":"<p>k0da uses its own configuration format that wraps k0s configuration and adds cluster-specific options:</p> <pre><code>apiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    version: string              # Optional: k0s version\n    image: string               # Optional: k0s image override  \n    args: []string              # Optional: extra k0s arguments\n    config: {}                  # k0s configuration (ClusterConfig)\n    manifests: []string         # Optional: list of manifest files/URLs\n  nodes: []NodeConfig          # Optional: multi-node configuration\n  options:\n    network: string             # Optional: container network name\n</code></pre>"},{"location":"user-guide/configuration/#k0s-section","title":"k0s Section","text":"<p>The <code>k0s</code> section contains all k0s-related configuration:</p>"},{"location":"user-guide/configuration/#version-and-image","title":"Version and Image","text":"<pre><code>spec:\n  k0s:\n    # Specify k0s version (will use corresponding image)\n    version: v1.33.4-k0s.0\n\n    # OR specify image directly (overrides version)\n    image: quay.io/k0sproject/k0s:v1.33.4-k0s.0\n\n    # Extra arguments passed to k0s\n    args: [\"--debug\", \"--verbose\"]\n</code></pre>"},{"location":"user-guide/configuration/#k0s-configuration","title":"k0s Configuration","text":"<p>The <code>config</code> section contains standard k0s ClusterConfig. Refer to the k0s documentation for all available options.</p> <pre><code>spec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: my-cluster\n      spec:\n        # All standard k0s configuration options\n        api:\n          port: 6443\n          sans: []\n        network:\n          podCIDR: \"10.244.0.0/16\"\n          serviceCIDR: \"10.96.0.0/12\"\n          provider: \"calico\"\n          kubeProxy:\n            mode: \"iptables\"\n        storage:\n          type: \"etcd\"\n        telemetry:\n          enabled: false\n        extensions:\n          helm:\n            repositories: []\n            charts: []\n</code></pre>"},{"location":"user-guide/configuration/#manifests","title":"Manifests","text":"<p>Manifests are YAML files applied automatically during cluster startup:</p> <pre><code>spec:\n  k0s:\n    manifests:\n      # Local files (relative to config file location)\n      - ./manifests/namespace.yaml\n      - ./manifests/deployment.yaml\n\n      # Absolute paths\n      - /path/to/manifest.yaml\n\n      # Remote URLs\n      - https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml\n      - https://github.com/jetstack/cert-manager/releases/download/v1.13.0/cert-manager.yaml\n</code></pre> <p>Warning</p> <p>All manifests should specify namespace if applicable. Manifests without namespace won't be applied.</p> <p>Manifest features:</p> <ul> <li>Applied in the order specified</li> <li>Support both local files and remote URLs</li> <li>Mounted read-only at <code>/var/lib/k0s/manifests/k0da</code> in the container</li> </ul>"},{"location":"user-guide/configuration/#nodes-section","title":"Nodes Section","text":"<p>Define multi-node cluster topology:</p>"},{"location":"user-guide/configuration/#basic-multi-node","title":"Basic Multi-Node","text":"<pre><code>spec:\n  nodes:\n    - role: controller\n    - role: worker\n    - role: worker\n</code></pre>"},{"location":"user-guide/configuration/#advanced-node-configuration","title":"Advanced Node Configuration","text":"<pre><code>spec:\n  nodes:\n    - role: controller\n      image: quay.io/k0sproject/k0s:v1.33.4-k0s.0  # Override image for this node\n      args: [\"--labels=k0sproject.io/foo=bar\"]      # Extra k0s arguments\n      ports:\n        - containerPort: 6443\n          hostPort: 16443\n          hostIP: \"127.0.0.1\"    # Optional\n      mounts:\n        - type: bind\n          source: /host/path\n          target: /container/path\n          options: [\"ro\"]\n      env:\n        DEBUG: \"true\"\n        LOG_LEVEL: \"info\"\n      labels:\n        purpose: \"demo\"\n        environment: \"dev\"\n\n    - role: worker\n      args: [\"--kubelet-extra-args=--max-pods=50\"]\n      env:\n        NODE_TYPE: \"worker\"\n</code></pre> <p>Node configuration options:</p> <ul> <li><code>role</code>: <code>controller</code> or <code>worker</code></li> <li><code>image</code>: Override k0s image for specific node</li> <li><code>args</code>: Extra arguments for k0s command</li> <li><code>ports</code>: Port mappings from container to host</li> <li><code>mounts</code>: Volume mounts into the container</li> <li><code>env</code>: Environment variables</li> <li><code>labels</code>: Container labels</li> </ul>"},{"location":"user-guide/configuration/#port-mappings","title":"Port Mappings","text":"<pre><code>ports:\n  - containerPort: 6443        # Required: port inside container\n    hostPort: 16443           # Optional: host port (auto-assigned if not specified)\n    hostIP: \"127.0.0.1\"       # Optional: host IP to bind to\n  - containerPort: 80\n    hostPort: 8080\n  - containerPort: 443\n    # hostPort will be auto-assigned\n</code></pre>"},{"location":"user-guide/configuration/#volume-mounts","title":"Volume Mounts","text":"<pre><code>mounts:\n  - type: bind                 # Mount type (usually 'bind')\n    source: /host/data         # Path on host\n    target: /data              # Path in container\n    options: [\"rw\"]            # Mount options: ro, rw, etc.\n\n  - type: bind\n    source: ./local/config     # Relative to config file\n    target: /etc/config\n    options: [\"ro\"]\n</code></pre>"},{"location":"user-guide/configuration/#options-section","title":"Options Section","text":"<p>Global cluster options:</p> <pre><code>spec:\n  options:\n    network: \"my-network\"      # Custom container network (default: k0da)\n</code></pre>"},{"location":"user-guide/configuration/#complete-configuration-examples","title":"Complete Configuration Examples","text":""},{"location":"user-guide/configuration/#simple-development-cluster","title":"Simple Development Cluster","text":"<pre><code># dev-cluster.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    version: v1.33.4-k0s.0\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: dev-cluster\n      spec:\n        telemetry:\n          enabled: false\n</code></pre>"},{"location":"user-guide/configuration/#production-like-cluster","title":"Production-Like Cluster","text":"<pre><code># prod-cluster.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    version: v1.33.4-k0s.0\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: prod-cluster\n      spec:\n        api:\n          port: 6443\n          sans:\n            - \"api.prod.local\"\n            - \"10.0.1.100\"\n        network:\n          podCIDR: \"192.168.0.0/16\"\n          serviceCIDR: \"172.20.0.0/16\"\n          kubeProxy:\n            mode: \"ipvs\"\n        storage:\n          type: \"etcd\"\n          etcd:\n            peerAddress: \"0.0.0.0\"\n        telemetry:\n          enabled: false\n  nodes:\n    - role: controller\n      ports:\n        - containerPort: 6443\n          hostPort: 6443\n    - role: worker\n    - role: worker\n</code></pre>"},{"location":"user-guide/configuration/#full-featured-cluster","title":"Full-Featured Cluster","text":"<pre><code># full-cluster.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    version: v1.33.4-k0s.0\n    args: [\"--debug\"]\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: full-cluster\n      spec:\n        api:\n          port: 6443\n          sans: [\"api.local\"]\n        network:\n          podCIDR: \"10.244.0.0/16\"\n          serviceCIDR: \"10.96.0.0/12\"\n          provider: \"calico\"\n        telemetry:\n          enabled: false\n        extensions:\n          helm:\n            repositories:\n              - name: ingress-nginx\n                url: https://kubernetes.github.io/ingress-nginx\n              - name: prometheus\n                url: https://prometheus-community.github.io/helm-charts\n            charts:\n              - name: ingress-nginx\n                chartname: ingress-nginx/ingress-nginx\n                version: \"4.8.0\"\n                namespace: ingress-nginx\n              - name: monitoring\n                chartname: prometheus/kube-prometheus-stack\n                version: \"55.0.0\"\n                namespace: monitoring\n    manifests:\n      - ./manifests/namespace.yaml\n      - ./manifests/configmap.yaml\n      - https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml\n  nodes:\n    - role: controller\n      ports:\n        - containerPort: 6443\n          hostPort: 6443\n        - containerPort: 80\n          hostPort: 80\n        - containerPort: 443\n          hostPort: 443\n      mounts:\n        - type: bind\n          source: ./data\n          target: /data\n          options: [\"rw\"]\n      env:\n        DEBUG: \"true\"\n      labels:\n        role: \"control-plane\"\n    - role: worker\n      env:\n        NODE_TYPE: \"worker\"\n      labels:\n        role: \"worker\"\n    - role: worker\n      env:\n        NODE_TYPE: \"worker\"\n      labels:\n        role: \"worker\"\n  options:\n    network: \"custom-network\"\n</code></pre>"},{"location":"user-guide/configuration/#network-configuration","title":"Network Configuration","text":""},{"location":"user-guide/configuration/#pod-and-service-networks","title":"Pod and Service Networks","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        network:\n          podCIDR: \"10.244.0.0/16\"      # Pod network CIDR\n          serviceCIDR: \"10.96.0.0/12\"   # Service network CIDR\n          provider: \"calico\"             # CNI provider\n          kubeProxy:\n            mode: \"iptables\"             # or \"ipvs\"\n</code></pre>"},{"location":"user-guide/configuration/#custom-cni","title":"Custom CNI","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        network:\n          provider: \"custom\"    # Disable default CNI\n          # Configure your own CNI via manifests\n    manifests:\n      - ./cni/custom-cni.yaml\n</code></pre>"},{"location":"user-guide/configuration/#storage-configuration","title":"Storage Configuration","text":""},{"location":"user-guide/configuration/#default-storage","title":"Default Storage","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        storage:\n          type: \"etcd\"\n</code></pre>"},{"location":"user-guide/configuration/#external-etcd","title":"External etcd","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        storage:\n          type: \"etcd\"\n          etcd:\n            peerAddress: \"0.0.0.0\"\n            externalCluster:\n              endpoints:\n                - \"https://etcd1.example.com:2379\"\n                - \"https://etcd2.example.com:2379\"\n              etcdPrefix: \"/k0da\"\n              caFile: \"/etc/etcd/ca.pem\"\n              certFile: \"/etc/etcd/cert.pem\"\n              keyFile: \"/etc/etcd/key.pem\"\n</code></pre>"},{"location":"user-guide/configuration/#api-server-configuration","title":"API Server Configuration","text":""},{"location":"user-guide/configuration/#basic-api-configuration","title":"Basic API Configuration","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        api:\n          port: 6443                    # API server port\n          k0sApiPort: 9443             # k0s API port\n          sans:                        # Subject Alternative Names\n            - \"api.example.com\"\n            - \"10.0.1.100\"\n            - \"192.168.1.100\"\n</code></pre>"},{"location":"user-guide/configuration/#api-server-extra-args","title":"API Server Extra Args","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        api:\n          extraArgs:\n            audit-log-path: \"/var/log/audit.log\"\n            audit-log-maxage: \"30\"\n            enable-admission-plugins: \"NodeRestriction,ResourceQuota\"\n</code></pre>"},{"location":"user-guide/configuration/#controller-components","title":"Controller Components","text":""},{"location":"user-guide/configuration/#controller-manager","title":"Controller Manager","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        controllerManager:\n          extraArgs:\n            bind-address: \"0.0.0.0\"\n            cluster-signing-duration: \"8760h\"\n</code></pre>"},{"location":"user-guide/configuration/#scheduler","title":"Scheduler","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        scheduler:\n          extraArgs:\n            bind-address: \"0.0.0.0\"\n            v: \"2\"\n</code></pre>"},{"location":"user-guide/configuration/#worker-configuration","title":"Worker Configuration","text":""},{"location":"user-guide/configuration/#kubelet-configuration","title":"Kubelet Configuration","text":"<pre><code>spec:\n  nodes:\n    - role: worker\n      args: \n        - \"--kubelet-extra-args=--max-pods=110\"\n        - \"--kubelet-extra-args=--cluster-dns=10.96.0.10\"\n</code></pre>"},{"location":"user-guide/configuration/#extensions","title":"Extensions","text":""},{"location":"user-guide/configuration/#helm-charts","title":"Helm Charts","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        extensions:\n          helm:\n            repositories:\n              - name: bitnami\n                url: https://charts.bitnami.com/bitnami\n            charts:\n              - name: nginx\n                chartname: bitnami/nginx\n                version: \"15.0.0\"\n                namespace: web\n                values: |\n                  service:\n                    type: NodePort\n                  ingress:\n                    enabled: true\n</code></pre>"},{"location":"user-guide/configuration/#storage-classes","title":"Storage Classes","text":"<pre><code>spec:\n  k0s:\n    config:\n      spec:\n        extensions:\n          storage:\n            create_default_storage_class: true\n            default_storage_class: \"local-path\"\n</code></pre>"},{"location":"user-guide/configuration/#environment-specific-configurations","title":"Environment-Specific Configurations","text":""},{"location":"user-guide/configuration/#development","title":"Development","text":"<pre><code># config/dev.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      spec:\n        telemetry:\n          enabled: false\n        api:\n          port: 6443\n</code></pre>"},{"location":"user-guide/configuration/#staging","title":"Staging","text":"<pre><code># config/staging.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      spec:\n        network:\n          kubeProxy:\n            mode: \"ipvs\"\n        telemetry:\n          enabled: false\n  nodes:\n    - role: controller\n    - role: worker\n    - role: worker\n</code></pre>"},{"location":"user-guide/configuration/#production","title":"Production","text":"<pre><code># config/production.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      spec:\n        api:\n          sans:\n            - \"api.prod.company.com\"\n        network:\n          podCIDR: \"192.168.0.0/16\"\n          serviceCIDR: \"172.20.0.0/16\"\n          kubeProxy:\n            mode: \"ipvs\"\n        storage:\n          type: \"etcd\"\n          etcd:\n            peerAddress: \"0.0.0.0\"\n        telemetry:\n          enabled: false\n        extensions:\n          helm:\n            repositories:\n              - name: prometheus\n                url: https://prometheus-community.github.io/helm-charts\n            charts:\n              - name: monitoring\n                chartname: prometheus/kube-prometheus-stack\n                namespace: monitoring\n  nodes:\n    - role: controller\n      ports:\n        - containerPort: 6443\n          hostPort: 6443\n    - role: worker\n    - role: worker\n    - role: worker\n</code></pre>"},{"location":"user-guide/configuration/#configuration-best-practices","title":"Configuration Best Practices","text":""},{"location":"user-guide/configuration/#security","title":"Security","text":"<ol> <li> <p>Disable telemetry for privacy:    <pre><code>spec:\n  k0s:\n    config:\n      spec:\n        telemetry:\n          enabled: false\n</code></pre></p> </li> <li> <p>Use specific versions for reproducibility:    <pre><code>spec:\n  k0s:\n    version: v1.33.4-k0s.0  # Pin specific version\n</code></pre></p> </li> <li> <p>Configure API server SANs for external access:    <pre><code>spec:\n  k0s:\n    config:\n      spec:\n        api:\n          sans:\n            - \"your-domain.com\"\n            - \"your-ip-address\"\n</code></pre></p> </li> </ol>"},{"location":"user-guide/configuration/#performance","title":"Performance","text":"<ol> <li> <p>Use IPVS for better performance:    <pre><code>spec:\n  k0s:\n    config:\n      spec:\n        network:\n          kubeProxy:\n            mode: \"ipvs\"\n</code></pre></p> </li> <li> <p>Configure appropriate pod limits:    <pre><code>spec:\n  nodes:\n    - role: worker\n      args: [\"--kubelet-extra-args=--max-pods=110\"]\n</code></pre></p> </li> </ol>"},{"location":"user-guide/configuration/#maintainability","title":"Maintainability","text":"<ol> <li>Use separate files for different environments</li> <li>Keep manifests organized in directories</li> <li>Use meaningful cluster names</li> <li>Document custom configurations</li> </ol>"},{"location":"user-guide/configuration/#validation","title":"Validation","text":"<p>k0da validates the configuration before creating clusters. Common validation errors:</p> <ul> <li>Invalid k0s version or image reference</li> <li>Malformed k0s ClusterConfig</li> <li>Invalid manifest file paths or URLs</li> <li>Port conflicts in node configuration</li> <li>Invalid mount paths or options</li> </ul>"},{"location":"user-guide/configuration/#references","title":"References","text":"<ul> <li>k0s Configuration: k0s Documentation</li> <li>Helm Charts: k0s Helm Charts</li> <li>Network Providers: k0s Network Providers</li> <li>Storage: k0s Storage</li> </ul>"},{"location":"user-guide/creating-clusters/","title":"Creating Clusters","text":"<p>This guide covers everything you need to know about creating k0s clusters with k0da.</p>"},{"location":"user-guide/creating-clusters/#overview","title":"Overview","text":"<p>k0da makes it easy to create local Kubernetes clusters using k0s. Whether you need a simple single-node cluster for development or a complex multi-node setup for testing, k0da has you covered.</p>"},{"location":"user-guide/creating-clusters/#basic-cluster-creation","title":"Basic Cluster Creation","text":""},{"location":"user-guide/creating-clusters/#your-first-cluster","title":"Your First Cluster","text":"<p>The simplest way to create a cluster:</p> <pre><code>k0da create cluster my-cluster\n</code></pre> <p>This creates: - A single-node cluster named \"my-cluster\" - Uses the latest k0s version - Default networking configuration - Ready to use with kubectl</p>"},{"location":"user-guide/creating-clusters/#specifying-k0s-version","title":"Specifying k0s Version","text":"<pre><code># Use a specific version\nk0da create cluster stable --k0s-version v1.29.0+k0s.0\n\n# Use the latest version explicitly\nk0da create cluster latest --k0s-version latest\n\n# Use a specific patch version\nk0da create cluster patch --k0s-version v1.28.5+k0s.0\n</code></pre>"},{"location":"user-guide/creating-clusters/#multi-node-clusters","title":"Multi-Node Clusters","text":""},{"location":"user-guide/creating-clusters/#simple-multi-node-setup","title":"Simple Multi-Node Setup","text":"<pre><code># Create a 3-node cluster (1 control plane + 2 workers)\nk0da create cluster multi --nodes 3\n\n# Create a larger cluster\nk0da create cluster big --nodes 5\n</code></pre>"},{"location":"user-guide/creating-clusters/#custom-node-configuration","title":"Custom Node Configuration","text":"<pre><code># Specify control plane and worker nodes separately\nk0da create cluster custom \\\n  --control-plane-nodes 3 \\\n  --worker-nodes 3\n</code></pre>"},{"location":"user-guide/creating-clusters/#networking-configuration","title":"Networking Configuration","text":""},{"location":"user-guide/creating-clusters/#default-network-settings","title":"Default Network Settings","text":"<p>By default, k0da uses: - Pod CIDR: 10.244.0.0/16 - Service CIDR: 10.96.0.0/12 - CNI: Calico</p>"},{"location":"user-guide/creating-clusters/#custom-networking","title":"Custom Networking","text":"<pre><code># Custom network ranges\nk0da create cluster network-test \\\n  --pod-subnet 192.168.0.0/16 \\\n  --service-subnet 172.20.0.0/16\n\n# Disable default CNI (bring your own)\nk0da create cluster custom-cni \\\n  --disable-default-cni\n</code></pre>"},{"location":"user-guide/creating-clusters/#port-mappings","title":"Port Mappings","text":"<p>Expose cluster services on host ports:</p> <pre><code># Map common web ports\nk0da create cluster web-cluster \\\n  --port-mapping 8080:80 \\\n  --port-mapping 8443:443\n\n# Map multiple ports\nk0da create cluster service-cluster \\\n  --port-mapping 3000:3000 \\\n  --port-mapping 5432:5432 \\\n  --port-mapping 6379:6379\n</code></pre>"},{"location":"user-guide/creating-clusters/#storage-and-volumes","title":"Storage and Volumes","text":""},{"location":"user-guide/creating-clusters/#host-path-mounts","title":"Host Path Mounts","text":"<p>Mount directories from your host system:</p> <pre><code># Mount current directory as workspace\nk0da create cluster dev \\\n  --volume $(pwd):/workspace\n\n# Mount multiple directories\nk0da create cluster full-dev \\\n  --volume $(pwd):/app \\\n  --volume /Users/me/data:/data \\\n  --volume /Users/me/config:/config:ro\n</code></pre>"},{"location":"user-guide/creating-clusters/#volume-options","title":"Volume Options","text":"<pre><code># Read-only mount\nk0da create cluster readonly \\\n  --volume /host/config:/etc/config:ro\n\n# Read-write mount (default)\nk0da create cluster readwrite \\\n  --volume /host/data:/data:rw\n\n# Mount with specific options\nk0da create cluster advanced \\\n  --volume /host/data:/data:rw,Z\n</code></pre>"},{"location":"user-guide/creating-clusters/#temporary-filesystems","title":"Temporary Filesystems","text":"<pre><code># Create tmpfs mounts for performance\nk0da create cluster fast \\\n  --tmpfs /tmp \\\n  --tmpfs /var/cache:size=1g,noexec\n</code></pre>"},{"location":"user-guide/creating-clusters/#advanced-configuration","title":"Advanced Configuration","text":""},{"location":"user-guide/creating-clusters/#custom-k0s-configuration","title":"Custom k0s Configuration","text":"<p>Create configuration files for different scenarios:</p>"},{"location":"user-guide/creating-clusters/#development-configuration","title":"Development Configuration","text":"<pre><code># dev-k0s.yaml\napiVersion: k0s.k0sproject.io/v1beta1\nkind: ClusterConfig\nmetadata:\n  name: dev-cluster\nspec:\n  api:\n    port: 6443\n  network:\n    podCIDR: \"10.244.0.0/16\"\n    serviceCIDR: \"10.96.0.0/12\"\n    kubeProxy:\n      mode: \"iptables\"\n  storage:\n    type: \"etcd\"\n</code></pre>"},{"location":"user-guide/creating-clusters/#production-like-configuration","title":"Production-like Configuration","text":"<pre><code># prod-like-k0s.yaml  \napiVersion: k0s.k0sproject.io/v1beta1\nkind: ClusterConfig\nmetadata:\n  name: production-test\nspec:\n  api:\n    port: 6443\n    sans:\n    - \"api.test.local\"\n  controllerManager:\n    extraArgs:\n      cluster-signing-duration: \"8760h\"\n  scheduler:\n    extraArgs:\n      bind-address: \"0.0.0.0\"\n  network:\n    podCIDR: \"192.168.0.0/16\"\n    serviceCIDR: \"172.20.0.0/16\"\n    kubeProxy:\n      mode: \"ipvs\"\n  storage:\n    type: \"etcd\"\n    etcd:\n      peerAddress: \"0.0.0.0\"\n</code></pre>"},{"location":"user-guide/creating-clusters/#configuration-with-extensions","title":"Configuration with Extensions","text":"<pre><code># extensions-k0s.yaml\napiVersion: k0s.k0sproject.io/v1beta1\nkind: ClusterConfig\nmetadata:\n  name: full-featured\nspec:\n  api:\n    port: 6443\n  network:\n    podCIDR: \"10.244.0.0/16\" \n    serviceCIDR: \"10.96.0.0/12\"\n  extensions:\n    helm:\n      repositories:\n      - name: bitnami\n        url: https://charts.bitnami.com/bitnami\n      charts:\n      - name: metrics-server\n        chartname: bitnami/metrics-server\n        version: \"6.5.0\"\n        namespace: kube-system\n</code></pre> <pre><code># Use configurations\nk0da create cluster dev --config dev-k0s.yaml\nk0da create cluster prod-test --config prod-like-k0s.yaml\nk0da create cluster full --config extensions-k0s.yaml\n</code></pre>"},{"location":"user-guide/creating-clusters/#environment-variables","title":"Environment Variables","text":"<p>Set environment variables in cluster containers:</p> <pre><code>k0da create cluster env-cluster \\\n  --env DEBUG=true \\\n  --env LOG_LEVEL=info \\\n  --env CUSTOM_VAR=value\n</code></pre>"},{"location":"user-guide/creating-clusters/#container-runtime-selection","title":"Container Runtime Selection","text":"<pre><code># Force Docker usage\nk0da create cluster docker-cluster --container-runtime docker\n\n# Force Podman usage  \nk0da create cluster podman-cluster --container-runtime podman\n</code></pre>"},{"location":"user-guide/creating-clusters/#cluster-naming-and-organization","title":"Cluster Naming and Organization","text":""},{"location":"user-guide/creating-clusters/#naming-conventions","title":"Naming Conventions","text":"<p>Choose meaningful names for your clusters:</p> <pre><code># Environment-based naming\nk0da create cluster dev-frontend\nk0da create cluster staging-api  \nk0da create cluster test-integration\n\n# Feature-based naming\nk0da create cluster feature-auth\nk0da create cluster fix-memory-leak\nk0da create cluster experiment-gpu\n\n# Version-based naming\nk0da create cluster k8s-1-29\nk0da create cluster k8s-1-28-test\n</code></pre>"},{"location":"user-guide/creating-clusters/#project-organization","title":"Project Organization","text":"<p>Organize clusters by project:</p> <pre><code># Create project-specific clusters\nk0da create cluster myapp-dev --nodes 1\nk0da create cluster myapp-test --nodes 3\nk0da create cluster myapp-perf --nodes 5\n\n# Use consistent naming\nk0da create cluster ${PROJECT}-${ENV}-${USER}\n</code></pre>"},{"location":"user-guide/creating-clusters/#performance-considerations","title":"Performance Considerations","text":""},{"location":"user-guide/creating-clusters/#resource-optimization","title":"Resource Optimization","text":"<pre><code># Minimal cluster for resource-constrained environments\nk0da create cluster minimal \\\n  --nodes 1 \\\n  --k0s-version v1.29.0+k0s.0\n\n# Performance cluster with more resources\nk0da create cluster performance \\\n  --nodes 3 \\\n  --tmpfs /tmp \\\n  --tmpfs /var/log\n</code></pre>"},{"location":"user-guide/creating-clusters/#startup-time","title":"Startup Time","text":"<pre><code># Wait for cluster to be ready\nk0da create cluster fast --wait --timeout 300\n\n# Don't wait (faster creation, manual verification needed)  \nk0da create cluster async --no-wait\n</code></pre>"},{"location":"user-guide/creating-clusters/#development-workflows","title":"Development Workflows","text":""},{"location":"user-guide/creating-clusters/#iterative-development","title":"Iterative Development","text":"<pre><code># Create development cluster\nk0da create cluster dev \\\n  --nodes 1 \\\n  --volume $(pwd):/workspace \\\n  --port-mapping 8080:80\n\n# Set up kubeconfig\nk0da kubeconfig dev --merge\n\n# Your development cycle:\n# 1. Make code changes\n# 2. Build image: docker build -t myapp:dev .\n# 3. Load image: k0da load image myapp:dev --cluster dev\n# 4. Deploy: kubectl apply -f manifests/\n# 5. Test: curl localhost:8080\n</code></pre>"},{"location":"user-guide/creating-clusters/#testing-workflows","title":"Testing Workflows","text":"<pre><code># Create test environment\nk0da create cluster test-env \\\n  --nodes 3 \\\n  --k0s-version v1.29.0+k0s.0 \\\n  --wait\n\n# Run your test suite\nk0da kubeconfig test-env --merge\nkubectl config use-context k0da-test-env\n\n# Deploy test applications\nkubectl apply -f test-manifests/\n\n# Run tests\n./run-integration-tests.sh\n\n# Cleanup\nk0da delete test-env\n</code></pre>"},{"location":"user-guide/creating-clusters/#troubleshooting-cluster-creation","title":"Troubleshooting Cluster Creation","text":""},{"location":"user-guide/creating-clusters/#common-issues","title":"Common Issues","text":""},{"location":"user-guide/creating-clusters/#image-pull-problems","title":"Image Pull Problems","text":"<pre><code># Check if image exists\ndocker pull k0sproject/k0s:v1.29.0-k0s.0\n\n# Use different image\nk0da create cluster test --image k0sproject/k0s:latest\n</code></pre>"},{"location":"user-guide/creating-clusters/#port-conflicts","title":"Port Conflicts","text":"<pre><code># k0da automatically finds available ports, but you can check:\nnetstat -ln | grep 6443\n\n# Force specific port\nk0da create cluster test --api-port 6444\n</code></pre>"},{"location":"user-guide/creating-clusters/#resource-issues","title":"Resource Issues","text":"<pre><code># Check available resources\ndocker system df\ndocker system prune  # Clean up if needed\n\n# Create smaller cluster\nk0da create cluster small --nodes 1\n</code></pre>"},{"location":"user-guide/creating-clusters/#debug-mode","title":"Debug Mode","text":"<pre><code># Enable verbose logging\nk0da create cluster debug-cluster --verbose\n\n# Check cluster status\nk0da list\nkubectl get nodes -o wide\nkubectl get pods -A\n</code></pre>"},{"location":"user-guide/creating-clusters/#validation","title":"Validation","text":"<p>After creating a cluster, validate it's working:</p> <pre><code># Basic cluster validation\nkubectl cluster-info\nkubectl get nodes\nkubectl get pods -A\n\n# Deploy test application\nkubectl create deployment nginx --image=nginx\nkubectl expose deployment nginx --port=80 --type=NodePort\nkubectl get svc nginx\n</code></pre>"},{"location":"user-guide/creating-clusters/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/creating-clusters/#development","title":"Development","text":"<ol> <li>Use descriptive names that include purpose and environment</li> <li>Mount your code directory for easier development</li> <li>Use single nodes for development to save resources</li> <li>Clean up regularly to avoid resource exhaustion</li> </ol>"},{"location":"user-guide/creating-clusters/#testing","title":"Testing","text":"<ol> <li>Use multi-node clusters to test real-world scenarios</li> <li>Pin k0s versions for reproducible tests</li> <li>Automate cluster creation in CI/CD pipelines</li> <li>Include cluster cleanup in test scripts</li> </ol>"},{"location":"user-guide/creating-clusters/#production-like-testing","title":"Production-like Testing","text":"<ol> <li>Match node counts to production topology</li> <li>Use same k0s version as production</li> <li>Test with resource constraints similar to production</li> <li>Include networking complexity (ingress, service mesh, etc.)</li> </ol>"},{"location":"user-guide/creating-clusters/#configuration-examples","title":"Configuration Examples","text":""},{"location":"user-guide/creating-clusters/#manifests-and-workload-installation","title":"Manifests and Workload Installation","text":""},{"location":"user-guide/creating-clusters/#using-manifests","title":"Using Manifests","text":"<p>Manifests provide a simple way to install workloads directly into your cluster during creation. This is particularly useful for bootstrapping clusters with essential components like ingress controllers, monitoring tools, or your application deployments.</p>"},{"location":"user-guide/creating-clusters/#local-manifests","title":"Local Manifests","text":"<pre><code># with-local-manifests.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: app-cluster\n    manifests:\n      - ./manifests/namespace.yaml\n      - ./manifests/configmap.yaml\n      - ./manifests/deployment.yaml\n      - ./manifests/service.yaml\n</code></pre>"},{"location":"user-guide/creating-clusters/#remote-manifests","title":"Remote Manifests","text":"<pre><code># with-remote-manifests.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: ingress-cluster\n    manifests:\n      - https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml\n      - https://github.com/jetstack/cert-manager/releases/download/v1.13.0/cert-manager.yaml\n</code></pre>"},{"location":"user-guide/creating-clusters/#mixed-manifests","title":"Mixed Manifests","text":"<pre><code># mixed-manifests.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: full-cluster\n    manifests:\n      - ./local/namespace.yaml              # Local file\n      - ./local/app-config.yaml            # Local file\n      - https://example.com/remote-app.yaml # Remote file\n</code></pre> <pre><code># Create clusters with manifests\nk0da create app --config with-local-manifests.yaml\nk0da create ingress --config with-remote-manifests.yaml\nk0da create full --config mixed-manifests.yaml\n</code></pre> <p>Key benefits: - Workloads are installed automatically during cluster creation - Both local files and remote URLs are supported - Manifests are applied in the order they appear in the list - Perfect for creating reproducible cluster setups</p>"},{"location":"user-guide/creating-clusters/#installing-helm-charts","title":"Installing Helm Charts","text":"<p>For more complex applications, you can install Helm charts directly through k0s configuration. This eliminates the need to manually add Helm repositories and install charts after cluster creation.</p>"},{"location":"user-guide/creating-clusters/#basic-helm-configuration","title":"Basic Helm Configuration","text":"<pre><code># helm-basic.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: helm-cluster\n      spec:\n        extensions:\n          helm:\n            repositories:\n            - name: ingress-nginx\n              url: https://kubernetes.github.io/ingress-nginx\n            charts:\n            - name: ingress-nginx\n              chartname: ingress-nginx/ingress-nginx\n              version: \"4.8.0\"\n              namespace: ingress-nginx\n</code></pre>"},{"location":"user-guide/creating-clusters/#advanced-helm-configuration","title":"Advanced Helm Configuration","text":"<pre><code># helm-advanced.yaml\napiVersion: k0da.k0sproject.io/v1alpha1\nkind: Cluster\nspec:\n  k0s:\n    config:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: monitoring-cluster\n      spec:\n        extensions:\n          helm:\n            repositories:\n            - name: prometheus\n              url: https://prometheus-community.github.io/helm-charts\n            - name: grafana\n              url: https://grafana.github.io/helm-charts\n            charts:\n            - name: prometheus\n              chartname: prometheus/kube-prometheus-stack\n              version: \"55.0.0\"\n              namespace: monitoring\n              values: |\n                grafana:\n                  adminPassword: admin123\n                  service:\n                    type: NodePort\n            - name: loki\n              chartname: grafana/loki-stack\n              version: \"2.9.0\"\n              namespace: logging\n</code></pre> <pre><code># Create clusters with Helm charts\nk0da create helm-basic --config helm-basic.yaml\nk0da create monitoring --config helm-advanced.yaml\n</code></pre> <p>Helm chart features: - Automatically adds repositories and installs charts - Supports custom values for chart configuration - Charts are installed during cluster initialization - Perfect for complex application stacks</p> <p>For more details about Helm chart configuration options, including advanced features like custom values files and chart dependencies, see the k0s Helm Charts documentation.</p>"},{"location":"user-guide/creating-clusters/#machine-learning-workloads","title":"Machine Learning Workloads","text":"<pre><code># Cluster for ML with GPU support (if available)\nk0da create cluster ml-cluster \\\n  --nodes 2 \\\n  --volume /data:/data \\\n  --volume /models:/models \\\n  --env CUDA_VISIBLE_DEVICES=all\n</code></pre>"},{"location":"user-guide/creating-clusters/#database-testing","title":"Database Testing","text":"<pre><code># Cluster for stateful applications\nk0da create cluster db-test \\\n  --nodes 3 \\\n  --volume /host/data:/var/lib/postgresql \\\n  --port-mapping 5432:5432 \\\n  --config stateful-k0s.yaml\n</code></pre>"},{"location":"user-guide/creating-clusters/#next-steps","title":"Next Steps","text":"<ul> <li>Managing Clusters - Learn to manage existing clusters</li> <li>Loading Images - Get your applications into clusters</li> <li>Configuration - Advanced k0da configuration</li> <li>CLI Reference - Detailed create command reference</li> </ul>"},{"location":"user-guide/loading-images/","title":"Loading Images","text":"<p>This guide covers how to load container images into your k0da clusters for use by your applications.</p>"},{"location":"user-guide/loading-images/#overview","title":"Overview","text":"<p>k0da clusters run in containers with their own containerd instance. To use custom images in your cluster, you need to load them from your local Docker/Podman daemon or from image archives.</p>"},{"location":"user-guide/loading-images/#loading-images-from-dockerpodman","title":"Loading Images from Docker/Podman","text":"<p>Use <code>k0da load image</code> to pull and load images directly:</p>"},{"location":"user-guide/loading-images/#basic-image-loading","title":"Basic Image Loading","text":"<pre><code># Load an image from a registry\nk0da load image nginx:latest\n\n# Load into a specific cluster\nk0da load image redis:7-alpine --name dev-cluster\n\n# Load your custom application image\nk0da load image myapp:v1.0.0\n</code></pre>"},{"location":"user-guide/loading-images/#multiple-images","title":"Multiple Images","text":"<pre><code># Load multiple images\nk0da load image nginx:latest\nk0da load image postgres:15\nk0da load image myapp:latest\n</code></pre>"},{"location":"user-guide/loading-images/#loading-from-archives","title":"Loading from Archives","text":"<p>Use <code>k0da load archive</code> to load images from tar archives or OCI layout directories:</p>"},{"location":"user-guide/loading-images/#tar-archives","title":"Tar Archives","text":"<pre><code># Create an image archive first\ndocker save myapp:latest -o myapp.tar\n\n# Load the archive into cluster\nk0da load archive myapp.tar\n\n# Load into specific cluster\nk0da load archive myapp.tar --name production\n</code></pre>"},{"location":"user-guide/loading-images/#oci-layout-directories","title":"OCI Layout Directories","text":"<pre><code># Load from OCI layout directory\nk0da load archive ./oci-layout-dir\n</code></pre>"},{"location":"user-guide/loading-images/#common-workflows","title":"Common Workflows","text":""},{"location":"user-guide/loading-images/#development-workflow","title":"Development Workflow","text":"<pre><code># 1. Build your application image\ndocker build -t myapp:dev .\n\n# 2. Load into development cluster\nk0da load image myapp:dev --name dev-cluster\n\n# 3. Deploy your application\nkubectl apply -f deployment.yaml\n</code></pre>"},{"location":"user-guide/loading-images/#multi-cluster-deployment","title":"Multi-Cluster Deployment","text":"<pre><code># Load same image into multiple clusters\nk0da load image myapp:v1.2.3 --name staging\nk0da load image myapp:v1.2.3 --name production\nk0da load image myapp:v1.2.3 --name test-env\n</code></pre>"},{"location":"user-guide/loading-images/#air-gapped-environments","title":"Air-Gapped Environments","text":"<pre><code># 1. Save images to archives on connected machine\ndocker save nginx:latest postgres:15 myapp:latest -o images.tar\n\n# 2. Transfer archive to air-gapped environment\n# 3. Load from archive\nk0da load archive images.tar\n</code></pre>"},{"location":"user-guide/loading-images/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/loading-images/#image-tagging","title":"Image Tagging","text":"<ul> <li>Use specific tags instead of <code>latest</code> for reproducibility</li> <li>Tag images with version numbers or commit SHAs</li> <li>Use consistent naming conventions</li> </ul> <pre><code># Good: specific versions\nk0da load image myapp:v1.2.3\nk0da load image nginx:1.24-alpine\n\n# Avoid: vague tags\nk0da load image myapp:latest\nk0da load image nginx\n</code></pre>"},{"location":"user-guide/loading-images/#efficient-loading","title":"Efficient Loading","text":"<ul> <li>Load images before deploying applications</li> <li>Use multi-stage Docker builds to reduce image size</li> <li>Load shared base images once and reuse</li> </ul>"},{"location":"user-guide/loading-images/#automation","title":"Automation","text":"<p>Integrate image loading into your deployment scripts:</p> <pre><code>#!/bin/bash\nCLUSTER_NAME=\"dev-cluster\"\nAPP_VERSION=\"v1.0.0\"\n\n# Build application\ndocker build -t myapp:$APP_VERSION .\n\n# Load into cluster\nk0da load image myapp:$APP_VERSION --name $CLUSTER_NAME\n\n# Deploy application\nkubectl apply -f k8s/deployment.yaml\n</code></pre>"},{"location":"user-guide/managing-clusters/","title":"Managing Clusters","text":"<p>This guide covers how to manage existing k0da clusters including listing, updating, and deleting clusters.</p>"},{"location":"user-guide/managing-clusters/#overview","title":"Overview","text":"<p>Once you have created clusters with k0da, you'll need to manage them throughout their lifecycle. k0da provides simple commands to list all your clusters, update their configuration, and clean them up when no longer needed.</p>"},{"location":"user-guide/managing-clusters/#listing-clusters","title":"Listing Clusters","text":"<p>Use the <code>list</code> command to see all your k0da clusters:</p>"},{"location":"user-guide/managing-clusters/#basic-listing","title":"Basic Listing","text":"<pre><code># List all running clusters\nk0da list\n\n# List all clusters including stopped ones\nk0da list --all\n</code></pre>"},{"location":"user-guide/managing-clusters/#detailed-information","title":"Detailed Information","text":"<pre><code># Show detailed cluster information\nk0da list --verbose\n</code></pre> <p>The verbose output includes:</p> <ul> <li>Cluster status (running/stopped)</li> <li>k0s version</li> <li>Node count</li> <li>Container IDs</li> <li>Port mappings</li> <li>Creation time</li> </ul>"},{"location":"user-guide/managing-clusters/#example-output","title":"Example Output","text":"<pre><code>$ k0da list\nNAME           STATUS    NODES   VERSION         AGE\ndev-cluster    Running   1       v1.33.4-k0s.0   2h\ntest-env       Running   3       v1.33.4-k0s.0   1h\nstaging        Stopped   2       v1.33.4-k0s.0   3d\n\n$ k0da list --verbose\nNAME           STATUS    NODES   VERSION         CONTAINERS                 PORTS                    AGE\ndev-cluster    Running   1       v1.33.4-k0s.0   k0da-dev-cluster-control   0.0.0.0:6443-&gt;6443/tcp   2h\ntest-env       Running   3       v1.33.4-k0s.0   k0da-test-env-control,     0.0.0.0:6444-&gt;6443/tcp   1h\n                                                 k0da-test-env-worker,\n                                                 k0da-test-env-worker2\n</code></pre>"},{"location":"user-guide/managing-clusters/#updating-clusters","title":"Updating Clusters","text":"<p>The <code>update</code> command allows you to modify existing cluster configuration:</p>"},{"location":"user-guide/managing-clusters/#basic-updates","title":"Basic Updates","text":"<pre><code># Update cluster with new configuration file\nk0da update my-cluster --config updated-config.yaml\n\n# Update to a different k0s version\nk0da update my-cluster --image quay.io/k0sproject/k0s:v1.33.5-k0s.0\n\n# Update cluster by name\nk0da update --name my-cluster --config new-config.yaml\n</code></pre>"},{"location":"user-guide/managing-clusters/#update-process","title":"Update Process","text":"<p>When you update a cluster, k0da:</p> <ol> <li>Validates the new configuration</li> <li>Updates the effective k0s configuration using k0s dynamic config</li> <li>Applies any new manifests without restart</li> </ol>"},{"location":"user-guide/managing-clusters/#update-examples","title":"Update Examples","text":"<pre><code># Update with timeout for readiness check\nk0da update production --config prod-v2.yaml --timeout 120s\n\n# Update development cluster with new manifests\nk0da update dev --config dev-with-ingress.yaml\n\n# Quick version update\nk0da update test --image quay.io/k0sproject/k0s:latest\n</code></pre>"},{"location":"user-guide/managing-clusters/#what-can-be-updated","title":"What Can Be Updated","text":"<ul> <li>k0s configuration (ClusterConfig)</li> <li>Manifest files</li> <li>Helm charts (via k0s configuration)</li> </ul>"},{"location":"user-guide/managing-clusters/#what-cannot-be-updated","title":"What Cannot Be Updated","text":"<ul> <li>k0s version (requires restart)</li> <li>Node topology (adding/removing nodes)</li> <li>Network configuration (pod/service CIDRs)</li> <li>Container runtime settings</li> <li>Volume mounts</li> </ul> <p>Note</p> <p>For changes that cannot be updated, you'll need to delete and recreate the cluster.</p>"},{"location":"user-guide/managing-clusters/#deleting-clusters","title":"Deleting Clusters","text":"<p>Remove clusters when they're no longer needed:</p>"},{"location":"user-guide/managing-clusters/#basic-deletion","title":"Basic Deletion","text":"<pre><code># Delete a specific cluster\nk0da delete my-cluster\n\n# Delete using the name flag\nk0da delete --name my-cluster\n</code></pre>"},{"location":"user-guide/managing-clusters/#force-deletion","title":"Force Deletion","text":"<pre><code># Skip confirmation prompt\nk0da delete my-cluster --force\n\n# Delete multiple clusters\nk0da delete dev-cluster test-env staging --force\n</code></pre>"},{"location":"user-guide/managing-clusters/#deletion-process","title":"Deletion Process","text":"<p>When deleting a cluster, k0da: 1. Stops all cluster containers 2. Removes the containers 3. Cleans up networks (if not shared) 4. Removes cluster data</p>"},{"location":"user-guide/managing-clusters/#examples","title":"Examples","text":"<pre><code># Interactive deletion (asks for confirmation)\nk0da delete old-cluster\n\n# Force deletion without confirmation\nk0da delete temp-cluster --force\n\n# Delete multiple clusters at once\nk0da delete cluster1 cluster2 cluster3 --force\n</code></pre>"},{"location":"user-guide/managing-clusters/#cluster-context-management","title":"Cluster Context Management","text":"<p>Switch between different cluster contexts:</p>"},{"location":"user-guide/managing-clusters/#context-operations","title":"Context Operations","text":"<pre><code># Switch to a specific cluster context\nk0da context my-cluster\n\n# List available contexts\nkubectl config get-contexts\n\n# Get current context\nkubectl config current-context\n</code></pre>"},{"location":"user-guide/managing-clusters/#kubeconfig-management","title":"Kubeconfig Management","text":"<pre><code># Get kubeconfig for a specific cluster\nk0da kubeconfig my-cluster\n\n# Merge cluster kubeconfig with your default kubeconfig\nk0da kubeconfig my-cluster --merge\n\n# Save kubeconfig to a specific file\nk0da kubeconfig my-cluster &gt; my-cluster-kubeconfig.yaml\n</code></pre>"},{"location":"user-guide/managing-clusters/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/managing-clusters/#regular-maintenance","title":"Regular Maintenance","text":"<ol> <li> <p>List clusters regularly to keep track of running clusters:    <pre><code>k0da list --all\n</code></pre></p> </li> <li> <p>Clean up unused clusters to free resources:    <pre><code>k0da delete old-cluster test-cluster --force\n</code></pre></p> </li> <li> <p>Update clusters to keep k0s versions current:    <pre><code>k0da update production --image quay.io/k0sproject/k0s:v1.33.5-k0s.0\n</code></pre></p> </li> </ol>"},{"location":"user-guide/managing-clusters/#naming-conventions","title":"Naming Conventions","text":"<p>Use consistent naming for easier management:</p> <pre><code># Environment-based naming\nk0da list | grep dev-\nk0da list | grep prod-\nk0da list | grep test-\n\n# Feature-based naming\nk0da delete feature-auth feature-payment --force\n\n# Temporary clusters\nk0da delete temp-* --force\n</code></pre>"},{"location":"user-guide/managing-clusters/#automation","title":"Automation","text":"<p>Integrate cluster management into scripts:</p> <pre><code>#!/bin/bash\n# Cleanup script for temporary clusters\n\n# List all temporary clusters\ntemp_clusters=$(k0da list | grep \"temp-\" | awk '{print $1}')\n\nif [ ! -z \"$temp_clusters\" ]; then\n    echo \"Cleaning up temporary clusters: $temp_clusters\"\n    k0da delete $temp_clusters --force\nelse\n    echo \"No temporary clusters to clean up\"\nfi\n</code></pre>"},{"location":"user-guide/managing-clusters/#monitoring","title":"Monitoring","text":"<p>Keep track of cluster resource usage:</p> <pre><code># Check cluster status\nk0da list --verbose\n\n# Check Docker/Podman resource usage\ndocker stats $(docker ps --filter \"label=io.k0da.cluster\" --format \"{{.Names}}\")\n\n# Monitor cluster health\nkubectl get nodes\nkubectl get pods -A\nkubectl top nodes  # if metrics-server is installed\n</code></pre>"},{"location":"user-guide/managing-clusters/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user-guide/managing-clusters/#common-issues","title":"Common Issues","text":"<p>Cluster not listed: <pre><code># Check if containers exist\ndocker ps -a --filter \"label=io.k0da.cluster\"\n\n# Check container logs\ndocker logs k0da-cluster-name-control\n</code></pre></p> <p>Update fails: <pre><code># Check configuration validity\nk0da update cluster-name --config config.yaml --dry-run\n\n# Check cluster status\nk0da list --verbose\nkubectl get nodes\n</code></pre></p> <p>Delete fails: <pre><code># Force stop and remove containers\ndocker stop $(docker ps -q --filter \"label=io.k0da.cluster.name=cluster-name\")\ndocker rm $(docker ps -aq --filter \"label=io.k0da.cluster.name=cluster-name\")\n</code></pre></p>"},{"location":"user-guide/managing-clusters/#recovery","title":"Recovery","text":"<p>If a cluster becomes unresponsive:</p> <pre><code># Try updating to reset configuration\nk0da update problematic-cluster --config working-config.yaml\n\n# If update fails, delete and recreate\nk0da delete problematic-cluster --force\nk0da create problematic-cluster --config working-config.yaml\n</code></pre>"},{"location":"user-guide/managing-clusters/#next-steps","title":"Next Steps","text":"<ul> <li>Configuration - Learn about advanced configuration options</li> <li>Loading Images - Get your applications into clusters</li> <li>CLI Reference - Detailed command reference</li> </ul>"}]}