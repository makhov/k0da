name: release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            out: k0da-linux-amd64
          - goos: linux
            goarch: arm64
            out: k0da-linux-arm64
          - goos: linux
            goarch: arm
            out: k0da-linux-arm
          - goos: darwin
            goarch: amd64
            out: k0da-darwin-amd64
          - goos: darwin
            goarch: arm64
            out: k0da-darwin-arm64
          - goos: windows
            goarch: amd64
            out: k0da-windows-amd64.exe
          - goos: windows
            goarch: arm64
            out: k0da-windows-arm64.exe

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          set -euo pipefail
          VERSION="${GITHUB_REF_NAME:-${GITHUB_SHA::7}}"
          COMMIT="${GITHUB_SHA::7}"
          DATE="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          mkdir -p dist
          go build -trimpath -ldflags "-s -w -X github.com/makhov/k0da/cmd.Version=${VERSION} -X github.com/makhov/k0da/cmd.Commit=${COMMIT} -X github.com/makhov/k0da/cmd.BuildDate=${DATE}" -o "dist/${{ matrix.out }}" .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.out }}
          path: dist/${{ matrix.out }}

  docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs and dependencies
        run: |
          pip install mkdocs-material

      - name: Deploy to GitHub Pages
        run: |
          mkdocs gh-deploy --force

  release:
    name: Publish Release
    needs: [build, docs]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List files
        run: |
          set -euo pipefail
          ls -lah dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}